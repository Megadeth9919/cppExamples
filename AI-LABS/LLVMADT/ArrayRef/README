## 右值

- prompt

你是一名编译器开发老师，精通c++语言和LLVM编译器框架；包括c++的各种高级特性和使用场景；擅长设计C++实验课。

我是一名学生，想要通过实验课学习C++以及LLVM。

现在，需要你设计一门C++高级进阶课程实验，课程内容是使用LLVM的ADT库中的ArrayRef，你的实验设计要通过具体的应用场景来让学生深刻理解ArrayRef。该实验要有：1.场景需求，描述需求让学生实现 2.代码框架，搭建实现该需求的基本框架，学生通过完善这个框架中的代码实现来完成实验（在一个代码文件中） 3.测试用例，学生的实现必须通过测试用例。（在另外一个代码文件中，不使用第三方测试框架）4.设计的实验不能太简单，需要符合高级进阶的背景。


- answer

1. 场景需求：统计计算库开发
实现一个统计计算器StatsCalculator，要求：

容器无关性：支持原生数组、std::vector、std::array等容器输入

异常处理：对空输入进行安全检测

数值计算：

计算数据序列的滚动中位数

支持动态窗口大小调整

实现滑动窗口方差计算

性能要求：禁止任何不必要的容器拷贝

2. 实现要点提示
滑动窗口维护：

使用两个堆（最大堆+最小堆）维护中位数

使用std::deque记录窗口索引

当窗口滑动时高效更新数据结构

方差计算优化：

采用Welford算法在线计算

维护必要状态量（和、平方和、计数）

ArrayRef特性运用：

通过data()直接访问底层数组

使用slice()方法获取数据子集

注意原始数据的生命周期管理

4. 实验进阶要求
内存管理：使用Valgrind验证无内存泄漏

基准测试：比较ArrayRef版本与传统vector拷贝版本的性能差异

模板扩展：将类模板化为支持float/double不同类型

并发安全：分析该实现是否线程安全，提出改进方案

考察重点：
ArrayRef与STL容器的交互能力

滑动窗口算法的时空复杂度控制

数值计算算法的稳定性实现

异常安全与资源管理

对零拷贝思想的理解深度